% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icar.R
\name{icar}
\alias{icar}
\title{ICAR distribution}
\usage{
icar(edges)
}
\arguments{
\item{edges}{A two-column R matrix of integers indexing the pairs of adjacent
nodes in the network being modelled. The nodes are indexed from 1.}
}
\value{
An operation greta array with an ICAR distribution, giving the
spatial random effect 'phi' at all nodes in the network. Note that this
greta array does not have a sum to zero constraint, so a 'soft' sum-to-zero
constraint will need to be applied, as in the example.
}
\description{
A greta probability distribution corresponding to multivariate normal
distribution with intrinsic conditional autoregressive covariance structure.
The only input required is a two-column R matrix of node edges, from which
the dimension of the resulting random vector phi is calculated. The length of
phi will be equal to number of nodes represented in the edge matrix - the
maximum value in either column.
}
\examples{

# define a network on a ring with a given number of nodes
n_nodes <- 5
edges <- cbind(1:n_nodes, c(2:n_nodes, 1))

# make some fake Gaussian observations for each node
set.seed(2023-05-19)
true_phi <- rnorm(n_nodes)
true_phi <- true_phi - sum(true_phi) / n_nodes
# sum(true_phi)
true_intercept <- 2
true_sd <- 0.2
y <- rnorm(n = n_nodes,
           mean = true_intercept + true_phi,
           sd = true_sd)

# define an ICAR random effect on this network
phi <- icar(edges)
# phi has length n_nodes (extracted from 'edges')

# apply soft sum-to-zero, to avoid identifiability issues
nil <- zeros(1)
distribution(nil) <- normal(sum(phi), n_nodes * 0.001)

# define an observation model for the data
intercept <- normal(0, 1)
sd <- normal(0, 1, truncation = c(0, Inf))
distribution(y) <- normal(intercept + t(phi), sd)

\dontrun{
# fit the model and plot estimates
m <- model(phi)
draws <- mcmc(m)

# check convergence of chains
coda::gelman.diag(draws, autoburnin = FALSE, multivariate = FALSE)
plot(draws)

# plot concordance of phi estimates with 'true' values
estimate <- summary(draws)$statistics[, "Mean"]
ci <- summary(draws)$quantiles[, c("2.5\%", "97.5\%")]
truth <- c(true_phi)
plot(estimate ~ truth,
     ylim = range(ci))
arrows(x0 = truth,
       x1 = truth,
       y0 = ci[, 1],
       y1 = ci[, 2], length = 0)
abline(0, 1)
}
}
